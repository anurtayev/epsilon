Description: pipeline

Parameters:
  ProjectName:
    Description: Project name
    Type: String
    Default: epsilon
  EnvironmentName:
    Description: Environment name, same as GitHub branch name
    Type: String
    Default: development
  FullRepositoryId:
    Type: String
    Default: "anurtayev/epsilon"
  BranchName:
    Type: String
    Default: "master"

Resources:
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-${EnvironmentName}-pipeline
      RoleArn: !ImportValue CodePipelineExecutionRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceAsZip
              Configuration:
                BranchName: !Ref BranchName
                ConnectionArn: !ImportValue CodeStarConnection
                FullRepositoryId: ${FullRepositoryId}
                OutputArtifactFormat: CODEBUILD_CLONE_REF
                DetectChanges: !If [IsDev, true, false]
              RunOrder: 1
            - Name: GetWrapperCode
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts:
                - Name: Wrapper
              Configuration:
                S3Bucket: !ImportValue InfrastructureBucketName
                S3ObjectKey: !Ref SourceObjectKey
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildPackage
              InputArtifacts:
                - Name: SourceAsZip
                - Name: Wrapper
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: SourceAsZip
              OutputArtifacts:
                - Name: ConnectorToDeploy
                - Name: BuildOutput
                - Name: ConnectorOutput
        - Name: Deploy
          Actions:
            - Name: DeployToConnectorStorage
              InputArtifacts:
                - Name: ConnectorToDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !ImportValue InfrastructureBucketName
                Extract: true
              RunOrder: 1
            - Name: UpdateCodePipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref ConnectorPipelineStackName
                TemplatePath: BuildOutput::pipeline.yaml
                ParameterOverrides: !Sub |
                  {
                    "BranchName": "${BranchName}",
                    "Stage": "${Stage}",
                    "RepositoryName": "${RepositoryName}",
                    "GithubUser": "${GithubUser}",
                    "ConnectorName": "${ConnectorName}",
                    "ConnectorPipelineStackName": "${ConnectorPipelineStackName}",
                    "Environment": "${Environment}"
                  }
                RoleArn: !ImportValue CodePipelineCFNRoleArn
              RunOrder: 2
            - Name: UpdateStackSet
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: Lambda
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                FunctionName: rc_global_update_stackset
                UserParameters: !Sub '{"StackSetName": "${ConnectorName}-${Stage}", "TemplateFile": "connector.yaml", "Parameters": {"Stage": "${Stage}", "ConnectorName":"${ConnectorName}", "GlobalAccount": "${AWS::AccountId}"}}'
              RunOrder: 3
            - Name: UpdateConnectorSchema
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: Lambda
              InputArtifacts:
                - Name: ConnectorOutput
              Configuration:
                FunctionName: rc_global_connector_complete_installation
              RunOrder: 3
      ArtifactStore:
        Type: S3
        Location: !ImportValue InfrastructureBucketName

  # The CodeBuild project which is used inside the CodePipeline.
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ConnectorName}-${Stage}
      ServiceRole: !ImportValue CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: CONNECTOR_NAME
            Value: !Ref ConnectorName
          - Name: CONNECTOR_REPO
            Value: !Ref RepositoryName
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: GITHUB_BRANCH
            Value: !Ref BranchName
          - Name: GITHUB_OWNER
            Value: !Ref GithubUser
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: STAGE
            Value: !Ref Stage
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/buildspec.yaml
      TimeoutInMinutes: 5

  # This event rule is used to trigger the CodePipeline according to the "release train" schedule.
  # It is only created in the qa and prod environments.
  EventRule:
    Type: AWS::Events::Rule
    Condition: IsNotDev
    Properties:
      Description: Deploy event rule
      EventBusName: !ImportValue GlobalEventBus
      EventPattern:
        source:
          - !Sub rwc.Core${Stage}
        detail-type:
          - deploy
      Name: !Sub rwc.trigger_${ConnectorName}_${Stage}
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AppPipeline}
          RoleArn: !ImportValue EventBridgeToCodePipelineRoleArn
          Id: !Ref AppPipeline

  # An additional event rule to trigger the connector CodePipeline when a new wrapper version was uploaded to S3.
  # It is only created in the dev environment.
  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Condition: IsDev
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - PutObject
            - CompleteMultipartUpload
          resources:
            ARN:
              - !Join [
                  "",
                  [
                    !ImportValue InfrastructureBucketArn,
                    "/",
                    !Ref SourceObjectKey,
                  ],
                ]
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AppPipeline}
          RoleArn: !ImportValue EventBridgeToCodePipelineRoleArn
          Id: codepipeline-AppPipeline

  # This is a standalone CodeBuild project used for CI tests, it is not part of a CodePipeline.
  # It is only created in the dev environment.
  CodeBuildProjectCi:
    Type: AWS::CodeBuild::Project
    Condition: CreateCiProject
    Properties:
      Name: !Sub ${ConnectorName}-ci
      ServiceRole: !ImportValue CodeBuildRoleArn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        # Enables running the Docker daemon inside a Docker container, set to true if Docker is used
        # PrivilegedMode: true
        EnvironmentVariables:
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: CONNECTOR_NAME
            Value: !Ref ConnectorName
          - Name: CONNECTOR_REPO
            Value: !Ref RepositoryName
          - Name: ENVIRONMENT
            Value: ci
          - Name: GITHUB_BRANCH
            Value: !Ref BranchName
          - Name: GITHUB_OWNER
            Value: !Ref GithubUser
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: STAGE
            Value: ci
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GithubUser}/${RepositoryName}.git
        BuildSpec: infrastructure/buildspec-ci.yaml
        GitCloneDepth: 1
      TimeoutInMinutes: 30
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH

  # This is a standalone CodeBuild project used for Veracode pipeline scans, it is not part of a CodePipeline.
  # It is only created in the dev environment.
  CodeBuildProjectVeracodePipelineScan:
    Type: AWS::CodeBuild::Project
    Condition: CreateVeracodeProjects
    Properties:
      Name: !Sub ${ConnectorName}-veracode-pipeline-scan
      ServiceRole: !ImportValue CodeBuildRoleArn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/rc-veracode/pipeline-scan:latest
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: CONNECTOR_NAME
            Value: !Ref ConnectorName
          - Name: CONNECTOR_REPO
            Value: !Ref RepositoryName
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: GITHUB_BRANCH
            Value: !Ref BranchName
          - Name: GITHUB_OWNER
            Value: !Ref GithubUser
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: STAGE
            Value: !Ref Stage
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GithubUser}/${RepositoryName}.git
        BuildSpec: infrastructure/buildspec-veracode-pipeline-scan.yaml
        GitCloneDepth: 1
      TimeoutInMinutes: 30
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_REOPENED,PULL_REQUEST_UPDATED

  # This is a standalone CodeBuild project used for Veracode static analysis, it is not part of a CodePipeline.
  # It is only created in the dev environment.
  CodeBuildProjectVeracodeStaticAnalysis:
    Type: AWS::CodeBuild::Project
    Condition: CreateVeracodeProjects
    Properties:
      Name: !Sub ${ConnectorName}-veracode-static-analysis
      ServiceRole: !ImportValue CodeBuildRoleArn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/rc-veracode/static-analysis:latest
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: CONNECTOR_NAME
            Value: !Ref ConnectorName
          - Name: CONNECTOR_REPO
            Value: !Ref RepositoryName
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: GITHUB_BRANCH
            Value: !Ref BranchName
          - Name: GITHUB_OWNER
            Value: !Ref GithubUser
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: STAGE
            Value: !Ref Stage
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GithubUser}/${RepositoryName}.git
        BuildSpec: infrastructure/buildspec-veracode-static-analysis.yaml
        GitCloneDepth: 1
      TimeoutInMinutes: 30
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_MERGED
            - Type: BASE_REF
              Pattern: ^refs/heads/develop$
