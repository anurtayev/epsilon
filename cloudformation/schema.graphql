type AttributeConnection {
  attributes: [String!]
  nextToken: String
}

input AttributesInput {
  attributes: [[String!]!]
}

interface Entry {
  id: String!
}

type FileEntry implements Entry {
  id: String!
  size: Int!
  extension: String!
}

type FolderConnection {
  items: [Entry!]
  nextToken: String
}

type FolderEntry implements Entry {
  id: String!
}

type MetaData {
  id: String!
  attributes: [[String!]!]
  tags: [String!]
}

type Mutation {
  updateAttributes(id: String!, attributesInput: AttributesInput!): MetaData
  deleteAttributes(id: String!): MetaData
  updateTags(id: String!, tagsInput: TagsInput!): MetaData
  deleteTags(id: String!): MetaData
}

type Query {
  listFolder(id: String!, nextToken: String): FolderConnection
  getMeta(id: String!): MetaData
  getAttributes(nextToken: String): AttributeConnection
  getTags(nextToken: String): TagConnection
}

type TagConnection {
  tags: [String!]
  nextToken: String
}

input TagsInput {
  tags: [String!]
}

schema {
  query: Query
  mutation: Mutation
}
