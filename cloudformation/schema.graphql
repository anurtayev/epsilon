type AttributesConnection {
  attributes: [String!]
  nextToken: String
}

input MetaDataInput {
  attributes: [[String!]!]
  tags: [String!]
}

type FolderConnection {
  items: [String!]
  nextToken: String
}

type MetaData {
  id: String!
  attributes: [[String!]!]
  tags: [String!]
}

type Mutation {
  updateMetaData(id: String!, metaDataInput: MetaDataInput): MetaData
}

type Query {
  listFolder(
    id: String
    nextToken: String
    pageSize: Int = 100
  ): FolderConnection
  getMeta(id: String!): MetaData
  getAttributes(nextToken: String): AttributesConnection
  getTags(nextToken: String): TagsConnection
  search(
    searchInput: SearchInput!
    nextToken: String
    pageSize: Int = 100
  ): FolderConnection
}

input SearchInput {
  tagsFilter: [String!]
  attributesFilter: [[String!]!]
  attributesSorter: [SortTerm!]
}

enum SortOrder {
  ASC
  DESC
}

input SortTerm {
  attribute: String!
  sortOrder: SortOrder!
}

type TagsConnection {
  tags: [String!]
  nextToken: String
}

schema {
  query: Query
  mutation: Mutation
}
