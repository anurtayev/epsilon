{
  "name": "epsilon",
  "version": "1.0.2",
  "description": "aspan back-end",
  "scripts": {
    "auth:extract": "node auth/extractPublicKeys.js",
    "auth:verify": "node auth/verifyToken.js",
    "build:dependencies": "scripts/build_dependencies.sh",
    "build:template": "scripts/build_template.sh",
    "build:src": "tsc",
    "build:src:watch": "tsc --watch",
    "build": "npm run build:dependencies && npm run build:template && npm run build:src",
    "sam:deploy": ". scripts/env.sh && sam deploy --template-file infrastructure/template.yaml --stack-name $ASPAN_APP_STACK_NAME --capabilities CAPABILITY_IAM --s3-bucket $INFRA_BUCKET_NAME",
    "sam:delete": ". scripts/env.sh && sam delete --stack-name $ASPAN_APP_STACK_NAME --no-prompts --region $AWS_DEFAULT_REGION",
    "sam:sync": ". scripts/env.sh && sam sync --stack-name $ASPAN_APP_STACK_NAME --watch --beta-features",
    "sam:logs": ". scripts/env.sh && sam logs --stack-name $ASPAN_APP_STACK_NAME --tail --beta-features ",
    "s3:media:uploadTestData": ". scripts/env.sh && aws s3 rm s3://$EPSILON_MEDIA_BUCKET_NAME --recursive && aws s3 sync s3://aspan-test-media s3://$EPSILON_MEDIA_BUCKET_NAME",
    "s3:media:rm": "scripts/remove_media_bucket.sh",
    "pipeline:create": ". scripts/env.sh && aws cloudformation create-stack --stack-name $ASPAN_APP_STACK_NAME-pipeline --template-body file://infrastructure/codepipeline.yaml  --capabilities CAPABILITY_NAMED_IAM --parameters ParameterKey=ProjectName,ParameterValue=$PROJECT ParameterKey=GitBranchName,ParameterValue=$GIT_BRANCH ParameterKey=FullRepositoryId,ParameterValue=$FULL_REPOSITORY_ID ParameterKey=PrincipalOrgID,ParameterValue=$PRINCIPAL_ORG_ID",
    "pipeline:update": ". scripts/env.sh && aws cloudformation update-stack --stack-name $ASPAN_APP_STACK_NAME-pipeline --template-body file://infrastructure/codepipeline.yaml  --capabilities CAPABILITY_NAMED_IAM --parameters ParameterKey=ProjectName,ParameterValue=$PROJECT ParameterKey=GitBranchName,ParameterValue=$GIT_BRANCH ParameterKey=FullRepositoryId,ParameterValue=$FULL_REPOSITORY_ID ParameterKey=PrincipalOrgID,ParameterValue=$PRINCIPAL_ORG_ID",
    "pipeline:delete": ". scripts/env.sh && aws cloudformation delete-stack --stack-name $ASPAN_APP_STACK_NAME-pipeline",
    "infra:setup": ". scripts/env.sh && aws cloudformation create-stack --stack-name aspan-$ASPAN_AWS_ACCOUNT-$AWS_DEFAULT_REGION-shared --template-body file://infrastructure/shared.yaml  --parameters ParameterKey=PrincipalOrgID,ParameterValue=$PRINCIPAL_ORG_ID",
    "infra:update": ". scripts/env.sh && aws cloudformation update-stack --stack-name aspan-$ASPAN_AWS_ACCOUNT-$AWS_DEFAULT_REGION-shared --template-body file://infrastructure/shared.yaml  --parameters ParameterKey=PrincipalOrgID,ParameterValue=$PRINCIPAL_ORG_ID",
    "test": "jest",
    "test:watch": "jest --watch",
    "lint": "eslint src"
  },
  "dependencies": {
    "@aspan/sigma": "^1.0.25",
    "aws-jwt-verify": "^3.1.0",
    "exifr": "^7.1.3",
    "sharp": "^0.29.3"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.89",
    "@types/jest": "^27.4.0",
    "@types/lodash": "^4.14.178",
    "@types/node": "^14.14.25",
    "@types/sharp": "^0.29.5",
    "@typescript-eslint/eslint-plugin": "^5.10.1",
    "@typescript-eslint/parser": "^5.10.1",
    "aws-sdk": "^2.1111.0",
    "axios": "^0.27.2",
    "dotenv-cli": "^4.1.1",
    "dotenv-safe": "^8.2.0",
    "eslint": "^8.6.0",
    "graphql": "^16.2.0",
    "husky": "^7.0.0",
    "jest": "^27.4.7",
    "prettier": "^2.4.1",
    "ts-jest": "^27.1.3",
    "ts-node": "^10.4.0",
    "typescript": "^4.5.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node"
  }
}
