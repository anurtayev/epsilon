        input AttributeSortTerm {
          attribute: String!
          sortOrder: SortOrder!
        }
        
        type AttributeValueTerm {
          attribute: String!
          value: String!
          type: InputType!
        }
        
        input AttributeValueTermInput {
          attribute: String!
          value: String!
          type: InputType!
        }
        
        type AttributesConnection {
          attributes: [String!]
          nextToken: String
        }
        
        type FolderConnection {
          items: [String!]
          nextToken: String
        }
        
        enum InputType {
          STRING
          NUMBER
        }
        
        type MetaData {
          id: String!
          attributes: [AttributeValueTerm!]
          tags: [String!]
        }
        
        input MetaDataInput {
          attributes: [AttributeValueTermInput!]
          tags: [String!]
        }
        
        type Mutation {
          updateMetaData(id: String!, metaDataInput: MetaDataInput): MetaData
        }
        
        type Query {
          listFolder(id: String, nextToken: String, pageSize: Int!): FolderConnection
          getMeta(id: String!): MetaData
          getAttributes(nextToken: String): AttributesConnection
          getTags(nextToken: String): TagsConnection
          search(
            searchInput: SearchInput!
            nextToken: String
            pageSize: Int!
          ): FolderConnection
        }
        
        input SearchInput {
          filter: MetaDataInput
          sorter: [AttributeSortTerm!]
        }
        
        enum SortOrder {
          ASC
          DESC
        }
        
        type TagsConnection {
          tags: [String!]
          nextToken: String
        }
        
        schema {
          query: Query
          mutation: Mutation
        }
